{{- define "keystone.templates.lifecycle.install" -}}
{{- $envAll := . }}
# The workflow checks that all the jobs and services required for
# keystone-api to start are here.

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: keystone-install
  namespace: {{ $envAll.Release.Namespace }}
spec:
  entrypoint: keystone-install
  serviceAccountName: wf-keystone-sa
  volumes:
  {{- include "keystone.templates.steps._credential_setup.volumes" . | nindent 2 }}
  {{- include "keystone.templates.steps._db_init.volumes" . | nindent 2 }}
  {{- include "keystone.templates.steps._db_sync.volumes" . | nindent 2 }}
  {{- include "keystone.templates.steps._fernet_setup.volumes" . | nindent 2 }}
  {{- include "keystone.templates.steps._rabbit_init.volumes" . | nindent 2 }}
# This DAG describes the "outer" workflow - it drives the flow
  templates:
  - name: keystone-install
    dag:
      tasks:
      - name: svc-memcached
        template: init
        arguments:
          parameters:
          - name: service
            value: {{ printf "%s:%s" $envAll.Release.Namespace "memcached" | quote }}
      - name: svc-mariadb
        template: init
        arguments:
          parameters:
          - name: service
            value: {{ printf "%s:%s" $envAll.Release.Namespace "mariadb" | quote }}
      - name: svc-rabbitmq
        template: init
        arguments:
          parameters:
          - name: service
            value: {{ printf "%s:%s" $envAll.Release.Namespace "rabbitmq" | quote }}
      - name: wf-keystone-db-init
        template: wf-keystone-db-init
        dependencies:
        - svc-mariadb
      - name: wf-keystone-rabbit-init
        template: wf-keystone-rabbit-init
        dependencies:
        - svc-rabbitmq
      - name: wf-keystone-db-sync
        template: wf-keystone-db-sync
        dependencies:
        - wf-keystone-db-init
        - wf-keystone-rabbit-init
        - task-keystone-credential-setup
        - task-keystone-fernet-setup
      - name: task-keystone-credential-setup
        template: task-keystone-credential-setup
      - name: task-keystone-fernet-setup
        template: task-keystone-fernet-setup
# The following workflows describe the inner nodes of the DAG
  - name: wf-keystone-rabbit-init
    steps:
    - - name: svc-rabbitmq-just-in-time
        template: svc-just-in-time
        arguments:
          parameters:
          - name: service
            value: "rabbitmq"
    - - name: task-keystone-rabbit-init
        template: task-keystone-rabbit-init
  - name: wf-keystone-db-init
    steps:
    - - name: svc-mariadb-just-in-time
        template: svc-just-in-time
        arguments:
          parameters:
          - name: service
            value: "mariadb"
    - - name: task-keystone-db-init
        template: task-keystone-db-init
  - name: wf-keystone-db-sync
    steps:
    - - name: svc-mariadb-just-in-time
        template: svc-just-in-time
        arguments:
          parameters:
          - name: service
            value: "mariadb"
      - name: svc-rabbitmq-just-in-time
        template: svc-just-in-time
        arguments:
          parameters:
          - name: service
            value: "rabbitmq"
    - - name: task-keystone-db-sync
        template: task-keystone-db-sync
# The following tasks describe leaf nodes of the DAG
  - name: task-keystone-credential-setup
    activeDeadlineSeconds: {{ .Values.dependencies.timeout.tasks.credential_setup }}
    retryStrategy:
      limit: {{ .Values.dependencies.retries.credential_setup }}
    container:
    {{- include "keystone.templates.steps._credential_setup.container" . | nindent 6 }}
  - name: task-keystone-fernet-setup
    activeDeadlineSeconds: {{ .Values.dependencies.timeout.tasks.fernet_setup }}
    retryStrategy:
      limit: {{ .Values.dependencies.retries.fernet_setup }}
    container:
    {{- include "keystone.templates.steps._fernet_setup.container" . | nindent 6 }}
  - name: task-keystone-rabbit-init
    activeDeadlineSeconds: {{ .Values.dependencies.timeout.tasks.rabbit_init }}
    retryStrategy:
      limit: {{ .Values.dependencies.retries.rabbit_init }}
    container:
    {{- include "keystone.templates.steps._rabbit_init.container" . | nindent 6 }}
  - name: task-keystone-db-init
    activeDeadlineSeconds: {{ .Values.dependencies.timeout.tasks.db_init }}
    retryStrategy:
      limit: {{ .Values.dependencies.retries.db_init }}
    container:
    {{- include "keystone.templates.steps._db_init.container" . | nindent 6 }}
  - name: task-keystone-db-sync
    activeDeadlineSeconds: {{ .Values.dependencies.timeout.tasks.db_sync }}
    retryStrategy:
      limit: {{ .Values.dependencies.retries.db_sync }}
    container:
    {{- include "keystone.templates.steps._db_sync.container" . | nindent 6 }}
# The templates below this line are utility templates
  - name: init
    inputs:
      parameters:
      - name: service
    container:
      name: "{{"{{inputs.parameters.service}}-init"}}"
      image: {{ .Values.images.tags.dep_check }}
      imagePullPolicy: IfNotPresent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: PATH
        value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
      - name: DEPENDENCY_SERVICE
        value: "{{"{{inputs.parameters.service}}"}}"
      - name: COMMAND
        value: "echo done"
    command:
      - kubernetes-entrypoint
  - name: svc-just-in-time
    inputs:
      parameters:
        - name: service
    resource:
      action: get
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{"{{inputs.parameters.service}}"}}"
---
# The workflow checks that all the jobs and services required for
# boostrap to start are here.

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: keystone-bootstrap
  namespace: {{ $envAll.Release.Namespace }}
spec:
  entrypoint: keystone-bootstrap
  serviceAccountName: wf-keystone-sa
  volumes:
  {{- include "keystone.templates.steps._bootstrap.volumes" . | nindent 2 }}
  {{- include "keystone.templates.steps._domain_manage.volumes" . | nindent 2 }}
# This DAG describes the "outer" workflow - it drives the flow
  templates:
  - name: keystone-bootstrap
    dag:
      tasks:
      - name: svc-keystone
        template: init
        arguments:
          parameters:
          - name: service
            value: {{ printf "%s:%s" $envAll.Release.Namespace "keystone-api" | quote }}
      - name: wf-domain-manage
        template: wf-domain-manage
        dependencies:
        - svc-keystone
      - name: task-bootstrap
        template: task-bootstrap
        dependencies:
        - svc-keystone
        - wf-domain-manage
# The following workflows describe the inner nodes of the DAG
  - name: wf-domain-manage
    steps:
    - - name: task-domain-manage-init
        template: task-domain-manage-init
    - - name: task-domain-manage
        template: task-domain-manage
# The following tasks describe leaf nodes of the DAG
  - name: task-domain-manage-init
    container:
    {{- include "keystone.templates.steps._domain_manage.init" . | nindent 6 }}
  - name: task-domain-manage
    container:
    {{- include "keystone.templates.steps._domain_manage.container" . | nindent 6 }}
  - name: task-bootstrap
    container:
    {{- include "keystone.templates.steps._bootstrap.container" . | nindent 6 }}
# The templates below this line are utility templates
  - name: init
    inputs:
      parameters:
      - name: service
    container:
      name: "{{"{{inputs.parameters.service}}-init"}}"
      image: {{ .Values.images.tags.dep_check }}
      imagePullPolicy: IfNotPresent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: PATH
        value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
      - name: DEPENDENCY_SERVICE
        value: "{{"{{inputs.parameters.service}}"}}"
      - name: COMMAND
        value: "echo done"
    command:
      - kubernetes-entrypoint
{{- end }}
