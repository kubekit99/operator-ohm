---
{{- define "keystone.templates.steps._rabbit_init.ignore" -}}
{{- $envAll := . }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keystone-rabbit-init
  namespace: {{ $envAll.Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: release-name-keystone-rabbit-init
  namespace: {{ $envAll.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-default-keystone-rabbit-init
subjects:
  - kind: ServiceAccount
    name: keystone-rabbit-init
    namespace: {{ $envAll.Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: release-name-default-keystone-rabbit-init
  namespace: {{ $envAll.Release.Namespace }}
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
    resources:
      - services
      - endpoints
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "keystone-rabbit-init"
spec:
  template:
    metadata:
      labels:
        release_group: release-name
        application: keystone
        component: rabbit-init
    spec:
      serviceAccountName: "keystone-rabbit-init"
      restartPolicy: OnFailure
      nodeSelector:
        openstack-control-plane: enabled

      initContainers:


        - name: init
          image: "quay.io/stackanetes/kubernetes-entrypoint:v0.3.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: {{ printf "%s:%s" $envAll.Release.Namespace "rabbitmq" | quote }}
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: COMMAND
              value: "echo done"
          command:
            - kubernetes-entrypoint
          volumeMounts:
            []

      containers:
        - name: rabbit-init
{{- end }}

{{- define "keystone.templates.steps._rabbit_init.container" -}}
name: rabbit-init
image: "docker.io/rabbitmq:3.7-management"
imagePullPolicy: "IfNotPresent"

command:
  - /tmp/rabbit-init.sh
volumeMounts:
  - name: rabbit-init-sh
    mountPath: /tmp/rabbit-init.sh
    subPath: rabbit-init.sh
    readOnly: true
env:
- name: RABBITMQ_ADMIN_CONNECTION
  valueFrom:
    secretKeyRef:
      name: keystone-rabbitmq-admin
      key: RABBITMQ_CONNECTION
- name: RABBITMQ_USER_CONNECTION
  valueFrom:
    secretKeyRef:
      name: keystone-rabbitmq-user
      key: RABBITMQ_CONNECTION
- name: RABBITMQ_AUXILIARY_CONFIGURATION
  value: "{\"policies\":[{\"apply-to\":\"all\",\"definition\":{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\",\"message-ttl\":70000},\"name\":\"ha_ttl_keystone\",\"pattern\":\"(notifications)\\\\.\",\"priority\":0,\"vhost\":\"keystone\"}]}"
{{- end }}

{{- define "keystone.templates.steps._rabbit_init.volumes" -}}
- name: rabbit-init-sh
  configMap:
    name: "keystone-bin"
    defaultMode: 0555
{{- end }}
