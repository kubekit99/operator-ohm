{{- if eq .Values.oslc.flow_kind "install" }}
{{- $envAll := . }}
---
apiVersion: openstacklcm.airshipit.org/v1alpha1
kind: DeletePhase
metadata:
  name: {{ .Values.serviceName }}-delete
spec:
  openstackServiceName: {{ .Values.serviceName }}
  targetOpenstackServiceVersion: moc.version.to.delete.to
  targetState: uninitialized
  source:
    type: tar
    location: /opt/openstacklcm-operator/helm-charts/{{ .Values.serviceName }}
---
apiVersion: openstacklcm.airshipit.org/v1alpha1
kind: InstallPhase
metadata:
  name: {{ .Values.serviceName }}-install
spec:
  openstackServiceName: {{ .Values.serviceName }}
  targetOpenstackServiceVersion: moc.version.to.install.to
  targetState: uninitialized
  source:
    type: tar
    location: /opt/openstacklcm-operator/helm-charts/{{ .Values.serviceName }}
---
apiVersion: openstacklcm.airshipit.org/v1alpha1
kind: TestPhase
metadata:
  name: {{ .Values.serviceName }}-test
spec:
  openstackServiceName: {{ .Values.serviceName }}
  targetOpenstackServiceVersion: moc.version.to.test.to
  targetState: uninitialized
  source:
    type: tar
    location: /opt/openstacklcm-operator/helm-charts/{{ .Values.serviceName }}
---
apiVersion: openstacklcm.airshipit.org/v1alpha1
kind: TrafficRolloutPhase
metadata:
  name: {{ .Values.serviceName }}-trafficrollout
spec:
  openstackServiceName: {{ .Values.serviceName }}
  targetOpenstackServiceVersion: moc.version.to.trafficrollout.to
  targetState: uninitialized
  source:
    type: tar
    location: /opt/openstacklcm-operator/helm-charts/{{ .Values.serviceName }}
---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: {{ $envAll.Release.Name }}
spec:
  entrypoint: {{ $envAll.Release.Name }}
  serviceAccountName: openstacklcm-argo-sa
  templates:
  - name: {{ $envAll.Release.Name }}
    steps:
    - - name: {{ .Values.serviceName }}-planning-startpoint
        template: phase-planning-startpoint

    - - name: {{ .Values.serviceName }}-start-install
        template: start-install-template
    - - name: {{ .Values.serviceName }}-install-ready
        template: phase-install-completion

    - - name: {{ .Values.serviceName }}-start-test
        template: start-test-template
    - - name: {{ .Values.serviceName }}-test-ready
        template: phase-test-completion
        continueOn:
           failed: {{ .Values.continue_on_test_failed }}

    - - name: {{ .Values.serviceName }}-start-trafficrollout
        template: start-trafficrollout-template
        when: {{ printf "%s.%s.%s" "{{steps" $.Values.serviceName "test-ready.tests-results}} == success" | quote }}
    - - name: {{ .Values.serviceName }}-trafficrollout-ready
        template: phase-trafficrollout-completion
        when: {{ printf "%s.%s.%s" "{{steps" $.Values.serviceName "test-ready.tests-results}} == success" | quote }}

    - - name: {{ .Values.serviceName }}-start-delete
        template: start-delete-template
        when: {{ printf "%s.%s.%s" "{{steps" $.Values.serviceName "test-ready.tests-results}} == failed" | quote }}
    - - name: {{ .Values.serviceName }}-delete-ready
        template: phase-delete-completion
        when: {{ printf "%s.%s.%s" "{{steps" $.Values.serviceName "test-ready.tests-results}} == failed" | quote }}

  - name: phase-planning-startpoint
    activeDeadlineSeconds: {{ .Values.phases.timeout.wait_phase_planning }}
    retryStrategy:
      limit: {{ .Values.phases.retries.wait_phase_planning }}
    resource:
      action: get
      successCondition: status.actualState == deployed
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: PlanningPhase
        metadata:
          name: {{ .Values.serviceName }}-planning

  - name: start-install-template
    activeDeadlineSeconds: {{ .Values.phases.timeout.enable_phase_install }}
    retryStrategy:
      limit: {{ .Values.phases.retries.enabled_phase_install }}
    resource:
      action: patch
      mergeStrategy: merge
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: InstallPhase
        metadata:
          name: {{ .Values.serviceName }}-install
        spec:
          targetState: deployed

  - name: phase-install-completion
    activeDeadlineSeconds: {{ .Values.phases.timeout.wait_phase_install }}
    retryStrategy:
      limit: {{ .Values.phases.retries.wait_phase_install }}
    resource:
      action: get
      successCondition: status.actualState == deployed
      failureCondition: status.actualState == failed
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: InstallPhase
        metadata:
          name: {{ .Values.serviceName }}-install

  - name: start-test-template
    activeDeadlineSeconds: {{ .Values.phases.timeout.enable_phase_test }}
    retryStrategy:
      limit: {{ .Values.phases.retries.enabled_phase_test }}
    resource:
      action: patch
      mergeStrategy: merge
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: TestPhase
        metadata:
          name: {{ .Values.serviceName }}-test
        spec:
          targetState: deployed

  - name: phase-test-completion
    activeDeadlineSeconds: {{ .Values.phases.timeout.wait_phase_test }}
    retryStrategy:
      limit: {{ .Values.phases.retries.wait_phase_test }}
    inputs:
      parameters:
      - name: num
    resource:
      action: get
      successCondition: status.actualState == deployed
      failureCondition: status.actualState == failed
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: TestPhase
        metadata:
          name: {{ .Values.serviceName }}-test
    outputs:
      parameters:
      - name: tests-results
        valueFrom:
          jsonPath: '{.status.satisfied}'

  - name: start-trafficrollout-template
    activeDeadlineSeconds: {{ .Values.phases.timeout.enable_phase_trafficrollout }}
    retryStrategy:
      limit: {{ .Values.phases.retries.enabled_phase_trafficrollout }}
    resource:
      action: patch
      mergeStrategy: merge
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: TrafficRolloutPhase
        metadata:
          name: {{ .Values.serviceName }}-trafficrollout
        spec:
          targetState: deployed

  - name: phase-trafficrollout-completion
    activeDeadlineSeconds: {{ .Values.phases.timeout.wait_phase_trafficrollout }}
    retryStrategy:
      limit: {{ .Values.phases.retries.wait_phase_trafficrollout }}
    resource:
      action: get
      successCondition: status.actualState == deployed
      failureCondition: status.actualState == failed
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: TrafficRolloutPhase
        metadata:
          name: {{ .Values.serviceName }}-trafficrollout

  - name: start-delete-template
    activeDeadlineSeconds: {{ .Values.phases.timeout.enable_phase_delete }}
    retryStrategy:
      limit: {{ .Values.phases.retries.enabled_phase_delete }}
    resource:
      action: patch
      mergeStrategy: merge
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: DeletePhase
        metadata:
          name: {{ .Values.serviceName }}-delete
        spec:
          targetState: deployed

  - name: phase-delete-completion
    activeDeadlineSeconds: {{ .Values.phases.timeout.wait_phase_delete }}
    retryStrategy:
      limit: {{ .Values.phases.retries.wait_phase_delete }}
    resource:
      action: get
      successCondition: status.actualState == deployed
      failureCondition: status.actualState == failed
      manifest: |
        apiVersion: openstacklcm.airshipit.org/v1alpha1
        kind: DeletePhase
        metadata:
          name: {{ .Values.serviceName }}-delete
{{ end }}
