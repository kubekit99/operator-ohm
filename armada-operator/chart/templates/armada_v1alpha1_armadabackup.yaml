apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: armadabackups.armada.airshipit.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.actual_state
    description: State
    name: State
    type: string
  - JSONPath: .spec.target_state
    description: Target State
    name: Target State
    type: string
  - JSONPath: .status.satisfied
    description: Satisfied
    name: Satisfied
    type: boolean
  group: armada.airshipit.org
  names:
    kind: ArmadaBackup
    plural: armadabackups
    shortNames:
    - abck
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            armadaEndpoints:
              description: ArmadaEndpoints specifies the endpoints of an armada cluster.
                When multiple endpoints are given, the backup operator retrieves the
                backup from the endpoint that has the most up-to-date state. The given
                endpoints must belong to the same armada cluster.
              items:
                type: string
              type: array
            backupPolicy:
              description: BackupPolicy configures the backup process.
              properties:
                timeoutInSecond:
                  description: TimeoutInSecond is the maximal allowed time in second
                    of the entire backup process.
                  format: int64
                  type: integer
              type: object
            ceph:
              description: Ceph defines the Ceph backup source spec.
              properties:
                cephSecret:
                  description: 'The name of the secret object that stores the Google
                    storage credential containing at most ONE of the following: An
                    access token with file name of ''access-token''. JSON credentials
                    with file name of ''credentials.json''.  If omitted, client will
                    use the default application credentials.'
                  type: string
                path:
                  description: 'Path is the full Ceph path where the backup is saved.
                    The format of the path must be: "<ceph-bucket-name>/<path-to-backup-file>"
                    e.g: "mycephbucket/armada.backup"'
                  type: string
              required:
              - path
              type: object
            charts:
              description: Reference to impacted ArmadaCharts
              items:
                type: string
              type: array
            clientTLSSecret:
              description: 'ClientTLSSecret is the secret containing the armada TLS
                client certs and must contain the following data items: data:    "armada-client.crt":
                <pem-encoded-cert>    "armada-client.key": <pem-encoded-key>    "armada-client-ca.crt":
                <pem-encoded-ca-cert>'
              type: string
            offsite:
              description: Offsite defines the Offsite backup source spec.
              properties:
                endpoint:
                  description: Endpoint if blank points to offsite. If specified,
                    can point to offsite compatible object stores.
                  type: string
                forcePathStyle:
                  description: ForcePathStyle forces to use path style over the default
                    subdomain style. This is useful when you have an offsite compatible
                    endpoint that doesn't support subdomain buckets.
                  type: boolean
                offsiteSecret:
                  description: The name of the secret object that stores the Offsite
                    credential and config files. The file name of the credential MUST
                    be 'credentials'. The file name of the config MUST be 'config'.
                    The profile to use in both files will be 'default'.  OffsiteSecret
                    overwrites the default armada operator wide Offsite credential
                    and config.
                  type: string
                path:
                  description: 'Path is the full offsite path where the backup is
                    saved. The format of the path must be: "<offsite-bucket-name>/<path-to-backup-file>"
                    e.g: "mybucket/armada.backup"'
                  type: string
              required:
              - path
              - offsiteSecret
              - forcePathStyle
              type: object
            storageType:
              description: StorageType is the armada backup storage type. We need
                this field because CRD doesn't support validation against invalid
                fields and we cannot verify invalid backup storage source.
              type: string
            targetState:
              description: Target state of the Helm Custom Resources
              type: string
          required:
          - storageType
          type: object
        status:
          properties:
            conditions:
              description: 'List of conditions and states related to the resource.
                JEB: Feature kind of overlap with event recorder'
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  resourceName:
                    type: string
                  resourceVersion:
                    format: int32
                    type: integer
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            reason:
              description: Reason indicates the reason for any related failures.
              type: string
            satisfied:
              description: Satisfied indicates if the release's ActualState satisfies
                its target state
              type: boolean
          required:
          - satisfied
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
